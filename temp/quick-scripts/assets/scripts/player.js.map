{"version":3,"sources":["player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","setInputControl","self","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","macro","KEY","a","accLeft","d","accRight","KEY_UP","onLoad","jumpAction","node","runAction","xSpeed","start","update","dt","Math","abs","x","audioEngine","playEffect"],"mappings":"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","file":"player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n        // 跳跃音效资源\r\n        jumpAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n    },\r\n\r\n    setJumpAction() {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        // 不断重复\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n    },\r\n\r\n    setInputControl() {\r\n        var self = this;\r\n        // 添加键盘事件监听\r\n        // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event) {\r\n            switch (event.keyCode) {\r\n                case cc.macro.KEY.a:\r\n                    self.accLeft = true;\r\n                    break;\r\n                case cc.macro.KEY.d:\r\n                    self.accRight = true;\r\n                    break;\r\n            }\r\n        });\r\n\r\n        // 松开按键时，停止向该方向的加速\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event) {\r\n            switch (event.keyCode) {\r\n                case cc.macro.KEY.a:\r\n                    self.accLeft = false;\r\n                    break;\r\n                case cc.macro.KEY.d:\r\n                    self.accRight = false;\r\n                    break;\r\n            }\r\n        });\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n\r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n\r\n        // 初始化键盘输入监听\r\n        this.setInputControl();\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    update(dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n\r\n    playJumpSound() {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n});"]}