{"version":3,"sources":["game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","url","AudioClip","onLoad","timer","starDuration","spawnNewStar","score","groundY","y","height","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","Math","random","randX","randY","jumpHeight","maxX","width","v2","gainScore","string","toString","audioEngine","playEffect","start","update","dt","gameOver","stopAllActions"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;AAMR;AACAC,yBAAiB,CAPT;AAQRC,yBAAiB,CART;AASR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAVA;AAcR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAfA;AAmBRE,sBAAc;AACVR,qBAAS,IADC;AAEVC,kBAAMP,GAAGe;AAFC,SAnBN;AAuBR;AACAC,oBAAY;AACRV,qBAAS,IADD;AAERW,iBAAKjB,GAAGkB;AAFA;AAxBJ,KAHP;AAgCL;;AAEAC,UAlCK,oBAkCI;AACL;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA;AACA,aAAKC,YAAL;AACA;AACA,aAAKC,KAAL,GAAa,CAAb;AACA;AACA,aAAKC,OAAL,GAAe,KAAKb,MAAL,CAAYc,CAAZ,GAAgB,KAAKd,MAAL,CAAYe,MAAZ,GAAqB,CAApD;AACH,KA5CI;AA8CLJ,gBA9CK,0BA8CU;AACX;AACA,YAAIK,UAAU3B,GAAG4B,WAAH,CAAe,KAAKvB,UAApB,CAAd;AACA;AACA,aAAKwB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACA;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;;AAEA;AACA,aAAKb,YAAL,GAAoB,KAAKX,eAAL,GAAuByB,KAAKC,MAAL,MAAiB,KAAK3B,eAAL,GAAuB,KAAKC,eAA7C,CAA3C;AACA,aAAKU,KAAL,GAAa,CAAb;AACH,KA3DI;AA6DLY,sBA7DK,gCA6DgB;AACjB,YAAIK,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKd,OAAL,GAAeW,KAAKC,MAAL,KAAgB,KAAKvB,MAAL,CAAYoB,YAAZ,CAAyB,QAAzB,EAAmCM,UAAlE,GAA+E,EAA3F;AACA;AACA,YAAIC,OAAO,KAAKX,IAAL,CAAUY,KAAV,GAAkB,CAA7B;AACAJ,gBAAQ,CAACF,KAAKC,MAAL,KAAgB,GAAjB,IAAwB,CAAxB,GAA4BI,IAApC;AACA;AACA,eAAOxC,GAAG0C,EAAH,CAAML,KAAN,EAAaC,KAAb,CAAP;AACH,KAtEI;AAwELK,aAxEK,uBAwEO;AACR,aAAKpB,KAAL,IAAc,CAAd;AACA;AACA,aAAKT,YAAL,CAAkB8B,MAAlB,GAA2B,YAAY,KAAKrB,KAAL,CAAWsB,QAAX,EAAvC;AACA;AACA7C,WAAG8C,WAAH,CAAeC,UAAf,CAA0B,KAAK/B,UAA/B,EAA2C,KAA3C;AACH,KA9EI;AAgFLgC,SAhFK,mBAgFG,CAEP,CAlFI;AAoFLC,UApFK,kBAoFEC,EApFF,EAoFM;AACP;AACA;AACA,YAAI,KAAK9B,KAAL,GAAa,KAAKC,YAAtB,EAAoC;AAChC,iBAAK8B,QAAL;AACA;AACH;AACD,aAAK/B,KAAL,IAAc8B,EAAd;AACH,KA5FI;AA8FLC,YA9FK,sBA8FM;AACP,aAAKtC,MAAL,CAAYuC,cAAZ,GADO,CACuB;AAC9B;AACH;AAjGI,CAAT","file":"game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            url: cc.AudioClip\n        }\n    },\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n        // 生成一个新的星星\n        this.spawnNewStar();\n        // 初始化计分\n        this.score = 0;\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height / 2;\n    },\n\n    spawnNewStar() {\n        // 使用给定的模板在场景中生成一个新节点\n        var newStar = cc.instantiate(this.starPrefab);\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n        // 将 Game 组件的实例传入星星组件\n        newStar.getComponent('star').game = this;\n\n        // 重置计时器，根据消失时间范围随机取一个值\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition() {\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.groundY + Math.random() * this.player.getComponent('player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width / 2;\n        randX = (Math.random() - 0.5) * 2 * maxX;\n        // 返回星星坐标\n        return cc.v2(randX, randY);\n    },\n\n    gainScore() {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    start() {\n\n    },\n\n    update(dt) {\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            return;\n        }\n        this.timer += dt;\n    },\n\n    gameOver() {\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\n        //cc.director.loadScene('game');\n    }\n});"]}